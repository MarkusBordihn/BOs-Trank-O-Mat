subprojects {

  apply plugin: 'java'

  java.toolchain.languageVersion = JavaLanguageVersion.of(17)
  java.withSourcesJar()
  java.withJavadocJar()

  jar {
    manifest {
      attributes([
          'Specification-Title'     : mod_name,
          'Specification-Vendor'    : vendor_name,
          'Specification-Version'   : project.jar.archiveVersion,
          'Implementation-Title'    : project.name,
          'Implementation-Version'  : project.jar.archiveVersion,
          'Implementation-Vendor'   : mod_author,
          'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
          'Timestamp'               : System.currentTimeMillis(),
          'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
          'Build-On-Minecraft'      : minecraft_version
      ])
    }
  }

  sourcesJar {
    from(rootProject.file("LICENSE")) {
      rename { "${it}_${mod_name}" }
    }
  }

  repositories {

    mavenCentral()

    maven {
      name = 'Sponge / Mixin'
      url = 'https://repo.spongepowered.org/repository/maven-public/'
    }

    maven {
      name = 'BlameJared Maven (CrT / Bookshelf)'
      url = 'https://maven.blamejared.com'
    }

    maven {
      url "https://www.cursemaven.com"
      content {
        includeGroup "curse.maven"
      }
    }
  }

  tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
  }

  tasks.withType(GenerateModuleMetadata) {
    enabled = false
  }

  tasks.withType(Javadoc).configureEach {
    enabled = false
  }

  tasks.register("prepareKotlinBuildScriptModel") {}
}